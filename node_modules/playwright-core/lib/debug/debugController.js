"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugController = void 0;
const events_1 = require("../events");
const recorderController_1 = require("./recorderController");
class DebugController {
    constructor(context, options) {
        const installInFrame = async (frame) => {
            try {
                const mainContext = await frame._mainContext();
                await mainContext.createDebugScript({ console: true, record: !!options.recorderOutput });
            }
            catch (e) {
            }
        };
        if (options.recorderOutput)
            new recorderController_1.RecorderController(context, options.recorderOutput);
        context.on(events_1.Events.BrowserContext.Page, (page) => {
            for (const frame of page.frames())
                installInFrame(frame);
            page.on(events_1.Events.Page.FrameNavigated, installInFrame);
        });
    }
}
exports.DebugController = DebugController;
//# sourceMappingURL=debugController.js.map